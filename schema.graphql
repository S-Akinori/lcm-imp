type Query {
  posts(first: Int, where: RootQueryToPostConnectionWhereArgs): RootQueryToPostConnection
  post(id: ID!, idType: PostIdType = SLUG): Post
  postReview(id: ID!, idType: PostReviewIdType = SLUG): PostReview
  postReviews(first: Int): RootQueryToPostReviewConnection
  categories: RootQueryToCategoryConnection
  category (id: ID!, idType: CategoryIdType): Category
  menu(id: ID! = "pickedOutPosts", idType: MenuNodeIdTypeEnum = NAME ): Menu
}

enum PostIdType {
  DATABASE_ID
  ID
  SLUG
  URI  
}

enum MenuNodeIdTypeEnum {
  DATABASE_ID
  ID
  LOCATION
  NAME
  SLUG
}

input RootQueryToPostConnectionWhereArgs {
  categoryName: String
}

# Post
type Post {
  id: Int!
  title: String!
  slug: String!
  content: String
  excerpt: String
  date: String
  categories: PostToCategoryConnection
  imageUrl: String
  featuredImage: FeaturedImageConnection
}

type RootQueryToPostConnection {
  edges: [RootQueryToPostConnectionEdge]
}

type RootQueryToPostConnectionEdge {
  node: Post
}

type PostToCategoryConnection {
  edges: [PostToCategoryConnectionEdge]
}

type PostToCategoryConnectionEdge {
  node: Category
}

type FeaturedImageConnection {
  node: FeaturedImage!
}

type FeaturedImage {
  sourceUrl: String!
}

#Category
enum CategoryIdType {
  DATABASE_ID
  ID
  NAME
  SLUG
  URI
}

type RootQueryToCategoryConnection {
  edges: [RootQueryToCategoryConnectionEdge]
}

type RootQueryToCategoryConnectionEdge {
  node: Category 
}

type Category {
  id: Int!
  name: String!
  slug: String!
  uri: String
  posts: CategoryToPostConnection
}

type CategoryToPostConnection {
  edges: [CategoryToPostConnectionEdge]
}

type CategoryToPostConnectionEdge {
  node: Post
}

# Menu
type Menu {
  id: String!
  slug: String!
  name: String!
  locations: [MenuLocationEnum]
  menuItems: MenuToMenuItemConnection
}

enum MenuLocationEnum {
  SIDE_NAV
}

type MenuToMenuItemConnection  {
  edges: [MenuToMenuItemConnectionEdge]
}

type MenuToMenuItemConnectionEdge {
  node: MenuItem
}

type MenuItem {
  connectedNode: MenuItemToMenuItemLinkableConnectionEdge
}

type MenuItemToMenuItemLinkableConnectionEdge {
  node: Post
}

#PostReview

enum PostReviewIdType {
  DATABASE_ID
  ID
  SLUG
  URI  
}

type PostReview {
  id: Int!
  title: String!
  slug: String!
  content: String
  excerpt: String
  date: String
  imageUrl: String
  featuredImage: FeaturedImageConnection
  reviewField: PostReview_Reviewfield!
}

type RootQueryToPostReviewConnection{
  edges: [RootQueryToPostReviewConnectionEdge!]
}

type RootQueryToPostReviewConnectionEdge {
  node: PostReview!
}


type PostReview_Reviewfield {
  date: String!
  image1: MediaItem!
  image2: MediaItem!
  movieType: String!
  name: String!
  reviewAll: String!
  reviewMovie: String!
  satisficationMovie: Int!
  satisficationShoot: Int!
  videoUrl: String!
}

type MediaItem {
  sourceUrl: String!
}